library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity FSM is
port (reset 		: in 	std_logic;
		p1 			: in 	std_logic;
		p2				: in  std_logic;
		p3				: in 	std_logic;
		start_stop  : in 	std_logic;
		clock 		: in 	std_logic;
		NewTime 		: out std_logic_vector(3 downto 0);
		TimeValue 	: out std_logic_vector(3 downto 0);
		TimeEnable 	: out std_logic;
		ledr	 		: out std_logic;
	   water_valve : out std_logic;
		rinse			: out std_logic;
		water_pump	: out std_logic;
		spin			: out std_logic);
end statemachine;

architecture Behav of FSM is

TYPE Tstate is (inicial, parado, meter_agua, enxaguar, tirar_agua, spin, finish);
signal s_State: Tstate;
	begin
    process(clock)
	  begin
		if (rising_edge(clock)) then 
			case(s_State) is
			when Menu => 
					if(reset='0') then
					--	display="P";
						s_State<=idle;
					end if;
		
			when idle => 
				if(reset='1') then
					s_State<=Menu;
				end if;
				if(programSelector='1') then
					s_State<=Prog1;
					s_start<='0';
				
				end if;
			
			when  Prog1 =>
				--display Prog1
				if(reset='1') then
					s_State<=Menu;
					
				end if;
				if(programSelector='1') then
					s_State<=Prog2;
					s_start<='0';
				end if;
				if(s_start='1') then
					WaterValve<='1';
					--counterdone
					s_State<=finish;
				end if;
				
			when Prog2 =>
				--display Prog2
				if(reset='1') then
						s_State<=Menu;
				end if;
				if(programSelector='1') then
					s_State<=Prog3;
					s_start<='0';
				end if;
				if(s_start='1') then
					WaterValve<='1';
				--counterdone
					s_State<=finish;
				end if;
				
			when Prog3 =>
				--display Prog3
				
				if(reset='1') then
					s_State<=Menu;
				end if;
				if(programSelector='1') then
					s_State<=idle;
				end if;
				if(starstop='1') then
					WaterValve<='1';
				--counterdone
					s_State<=finish;
					s_start<='0';
				end if;
			
			when finish =>
				if(reset='1') then
					s_State<=menu;
				else	
					s_State<=idle;
				end if;
				
			 
			 end case;
			 
			 end if;
				
			end process;
			
		end Behav;	
			
			
			
			
			
				